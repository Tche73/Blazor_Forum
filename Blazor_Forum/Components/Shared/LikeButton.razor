@using Blazor_Forum.Models
@using Blazor_Forum.Services
@inject IForumService ForumService

@* <button class="btn btn-sm @(isLiked ? "btn-primary" : "btn-outline-primary")" @onclick="ToggleLike">
    <i class="oi oi-thumb-up"></i> @likeCount
</button> *@

<button class="btn btn-sm btn-danger" @onclick="ToggleLike" style="display:block;margin:5px;">
    👍 @likeCount
</button>

@code {
    [Parameter]
    public int ReponseId { get; set; }

    [Parameter]
    public int UserId { get; set; }

    [Parameter]
    public int Likes { get; set; }

    private bool isLiked = false;
    private int likeCount;
    private Like currentLike;

    protected override void OnInitialized()
    {
        likeCount = Likes;
        // Nous vérifierons l'état du like après le premier rendu
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await CheckLikeStatus();
        }
    }

    private async Task CheckLikeStatus()
    {
        try
        {
            // Vérifier si l'utilisateur a déjà liké cette réponse
            var likes = await ForumService.GetLikesByReponseAsync(ReponseId);
            var userLike = likes.FirstOrDefault(l => l.UserId == UserId);

            if (userLike != null)
            {
                isLiked = true;
                currentLike = userLike;
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erreur lors de la vérification du statut du like: {ex.Message}");
        }
    }

    private async Task ToggleLike()
    {
        try
        {
            if (!isLiked)
            {
                // Ajouter un like
                var like = new Like
                    {
                        ReponseId = ReponseId,
                        UserId = UserId
                    };

                var result = await ForumService.AddLikeAsync(like);
                if (result != null)
                {
                    currentLike = result;
                    isLiked = true;
                    likeCount++;
                }
            }
            else if (currentLike != null)
            {
                // Supprimer le like
                await ForumService.RemoveLikeAsync(currentLike.Id);
                isLiked = false;
                likeCount--;
                currentLike = null;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erreur lors du toggle du like: {ex.Message}");
        }
    }
}