@page "/forum/create"
@using Blazor_Forum.Models
@using Blazor_Forum.Services
@inject IForumService ForumService
@inject NavigationManager NavigationManager

<h3>Nouveau message</h3>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-body">
                <EditForm Model="@message" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group mb-3">
                        <label for="contenu">Contenu</label>
                        <InputTextArea id="contenu" @bind-Value="message.Contenu" class="form-control" rows="5" />
                        <ValidationMessage For="@(() => message.Contenu)" />
                    </div>

                    <div class="form-group mb-3">
                        <label for="userId">Utilisateur</label>
                        <InputSelect id="userId" @bind-Value="message.UserId" class="form-control">
                            <option value="">-- Sélectionner un utilisateur --</option>
                            @foreach (var user in users)
                            {
                                <option value="@user.Id">@user.Username</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => message.UserId)" />
                    </div>

                    <button type="submit" class="btn btn-primary">Publier</button>
                    <a href="/forum" class="btn btn-secondary">Annuler</a>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private Message message = new() { DatePublication = DateTime.Now };
    private List<User> users = new();

    protected override async Task OnInitializedAsync()
    {
        users = await ForumService.GetUsersAsync();
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            var result = await ForumService.CreateMessageAsync(message);
            if (result != null)
            {
                NavigationManager.NavigateTo("/forum");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erreur: {ex.Message}");
        }
    }
}