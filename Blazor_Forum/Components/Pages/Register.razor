@page "/register"
@using Blazor_Forum.Dto_s
@using Blazor_Forum.Repositories
@inject AuthService AuthService
@inject NavigationManager NavigationManager

<h3>Inscription</h3>

<EditForm Model="@registerModel" OnValidSubmit="HandleRegister" FormName="RegisterForm">
    <DataAnnotationsValidator />
    <ValidationSummary class="alert alert-danger" />

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">@errorMessage</div>
    }

    <div class="form-group mb-3">
        <label for="username">Nom d'utilisateur</label>
        <InputText id="username"
                   @bind-Value="registerModel.Username"
                   class="form-control" />
        <ValidationMessage For="@(() => registerModel.Username)" />
    </div>

    <div class="form-group mb-3">
        <label for="email">Email</label>
        <InputText id="email"
                   @bind-Value="registerModel.Email"
                   class="form-control"
                   type="email" />
        <ValidationMessage For="@(() => registerModel.Email)" />
    </div>

    <div class="form-group mb-3">
        <label for="password">Mot de passe</label>
        <InputText id="password"
                   @bind-Value="registerModel.Password"
                   class="form-control"
                   type="password" />
        <ValidationMessage For="@(() => registerModel.Password)" />
    </div>

    <div class="form-group mb-3">
        <label for="confirmPassword">Confirmer le mot de passe</label>
        <InputText id="confirmPassword"
                   @bind-Value="registerModel.ConfirmPassword"
                   class="form-control"
                   type="password" />
        <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
    </div>

    <button type="submit" class="btn btn-primary">S'inscrire</button>
</EditForm>

@code {
    private RegisterDto registerModel = new RegisterDto();
    private string errorMessage;

    private async Task HandleRegister()
    {
        errorMessage = null; // Réinitialiser le message d'erreur

        try
        {
            var success = await AuthService.RegisterAsync(registerModel);

            if (success)
            {
                NavigationManager.NavigateTo("/login");
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
            StateHasChanged(); // Force la mise à jour de l'affichage
        }
    }
}